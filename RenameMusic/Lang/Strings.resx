<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EXCEPTION_MSG" xml:space="preserve">
    <value>An error has occurred, please notify the developer.</value>
  </data>
  <data name="TASK_SUCCESFULL_MSG" xml:space="preserve">
    <value>Task completed successfully.</value>
  </data>
  <data name="SETTINGS_RESTORED" xml:space="preserve">
    <value>Settings restored.</value>
  </data>
  <data name="CANCEL" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="APPLY" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="ADD_FOLDER" xml:space="preserve">
    <value>Add folder</value>
  </data>
  <data name="RENAME_FILES" xml:space="preserve">
    <value>Rename files</value>
  </data>
  <data name="NAME" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NEW_NAME" xml:space="preserve">
    <value>New name</value>
  </data>
  <data name="TYPE" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="TITLE" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="ALBUM" xml:space="preserve">
    <value>Album</value>
  </data>
  <data name="LOADING" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="SETTINGS" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="ARTIST" xml:space="preserve">
    <value>Artist</value>
  </data>
  <data name="ALBUM_ARTIST" xml:space="preserve">
    <value>Album artist</value>
  </data>
  <data name="DURATION" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="FOLDERS" xml:space="preserve">
    <value>Folders</value>
  </data>
  <data name="DIRECTORY" xml:space="preserve">
    <value>Directory</value>
  </data>
  <data name="RESTORE_SETTINGS" xml:space="preserve">
    <value>Restore</value>
  </data>
  <data name="TO_RENAME" xml:space="preserve">
    <value>To rename</value>
  </data>
  <data name="DO_NOT_RENAME" xml:space="preserve">
    <value>Don't rename</value>
  </data>
  <data name="MULTI_INSTANCE_MSG" xml:space="preserve">
    <value>Multiple instances of this program are not allowed.</value>
  </data>
  <data name="FILE_NOT_FOUND_MSG" xml:space="preserve">
    <value>File not found.</value>
  </data>
  <data name="REPLACE" xml:space="preserve">
    <value>Replace</value>
  </data>
  <data name="SKIP" xml:space="preserve">
    <value>Skip</value>
  </data>
  <data name="RENAME" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="REPEATED_FILE" xml:space="preserve">
    <value>Repeated file</value>
  </data>
  <data name="IMPORT_SETTINGS" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="EXPORT_SETTINGS" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="FILE_REPEATED_MSG" xml:space="preserve">
    <value>There is already a file with the same name in this location. How do you want to continue?</value>
  </data>
  <data name="KEEP_MY_CHOICE_MSG" xml:space="preserve">
    <value>Keep my choice with the next files.</value>
  </data>
  <data name="LOCATION_MSG" xml:space="preserve">
    <value>Location:</value>
  </data>
  <data name="CURRENT_FILE_NAME_MSG" xml:space="preserve">
    <value>Current name:</value>
  </data>
  <data name="TOGGLE_LANG_MSG" xml:space="preserve">
    <value>The application will restart and the selected language will be applied.</value>
  </data>
  <data name="LANGUAGE" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="ADD_FILE" xml:space="preserve">
    <value>Add file</value>
  </data>
  <data name="EXIT" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="FILE" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="RESTARTING" xml:space="preserve">
    <value>Restarting...</value>
  </data>
  <data name="EXIT_MSG" xml:space="preserve">
    <value>Do you want to exit?</value>
  </data>
  <data name="HELP" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="ABOUT" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="YEAR" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="TRACK_NUM" xml:space="preserve">
    <value>Track Nº</value>
  </data>
  <data name="INVALID_TEMPLATE_MSG" xml:space="preserve">
    <value>The template contains invalid characters and cannot be used as file name.</value>
  </data>
  <data name="NOT_ALLOWED" xml:space="preserve">
    <value>Not allowed</value>
  </data>
  <data name="SEARCH_SUBFOLDERS" xml:space="preserve">
    <value>Search in subfolders</value>
  </data>
  <data name="THEME" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="VIEW_HELP" xml:space="preserve">
    <value>View help</value>
  </data>
  <data name="CHECK_UPDATES" xml:space="preserve">
    <value>Check for updates</value>
  </data>
  <data name="LOADED" xml:space="preserve">
    <value>Loaded</value>
  </data>
  <data name="RW_DESCRIPTION" xml:space="preserve">
    <value>Check the required tags which should not be empty fields, this helps to define which files will be renamed later.</value>
  </data>
  <data name="LOAD_PREV_DATA" xml:space="preserve">
    <value>Load previous data</value>
  </data>
  <data name="READY" xml:space="preserve">
    <value>Ready</value>
  </data>
  <data name="EDIT_TAGS" xml:space="preserve">
    <value>Edit tags</value>
  </data>
  <data name="RENAME_THIS_NOW" xml:space="preserve">
    <value>Rename this now</value>
  </data>
  <data name="DELETE_FILE" xml:space="preserve">
    <value>Delete file</value>
  </data>
  <data name="DELETE_FOLDER" xml:space="preserve">
    <value>Delete folder</value>
  </data>
  <data name="REMOVE_FROM_LIST" xml:space="preserve">
    <value>Remove from list</value>
  </data>
  <data name="OPEN_IN_EXPLORER" xml:space="preserve">
    <value>Open in Explorer</value>
  </data>
  <data name="PLAY_FILE" xml:space="preserve">
    <value>Play file</value>
  </data>
  <data name="SAVE" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="METADATA_EDITOR" xml:space="preserve">
    <value>Metadata editor</value>
  </data>
  <data name="COMMENT" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="GENRES" xml:space="preserve">
    <value>Genres</value>
  </data>
  <data name="CANNOT_BE_EMPTY" xml:space="preserve">
    <value>Cannot be empty.</value>
  </data>
  <data name="REPLACE_WITH" xml:space="preserve">
    <value>Replace with</value>
  </data>
</root>